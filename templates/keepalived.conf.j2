
global_defs {
    
    router_id LVS_DEVEL
}


vrrp_script chk_haproxy {
    script "killall -0 haproxy"
    interval 2
    weight 2
}


vrrp_instance VI_1 {
    state {{ 'MASTER' if inventory_hostname == k8s_ha_master_node else 'BACKUP' }}
    interface {{ k8s_bridge_name }}.{{ k8s_public_vlan_id }}
    virtual_router_id {{ k8s_ha_virtual_router_id }}
    priority {{ 150 if inventory_hostname == k8s_ha_master_node else 100 }}
    advert_int 1
    authentication {
        auth_type PASS
        auth_pass {{ vault.k8s_ha_vrrp_pass }}
    }

    virtual_ipaddress {
        {{ k8s_ha_api_vip }}/32 dev {{ k8s_bridge_name }}.{{ k8s_public_vlan_id }}
    }

    track_script {
        chk_haproxy
    }
}
